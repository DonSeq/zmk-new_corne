#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

&lt { quick-tap-ms = <150>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        lhm: long_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            // custom timeouts

            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <125>;
        };

        shm: short_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            // custom timeouts

            tapping-term-ms = <150>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <125>;
        };

        slt: short_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;

            // custom timeouts

            tapping-term-ms = <175>;
            quick-tap-ms = <180>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp TAB                  &kp Q            &kp W            &kp E              &kp R                &kp T           &kp UP_ARROW     &kp Y         &kp U                 &kp I               &kp O             &kp P                &kp BSPC
&mt LEFT_CONTROL ESCAPE  &lhm LEFT_GUI A  &lhm LEFT_ALT S  &shm LEFT_SHIFT D  &shm LEFT_CONTROL F  &kp G           &kp DOWN_ARROW   &kp H         &shm RIGHT_CONTROL J  &shm RIGHT_SHIFT K  &lhm RIGHT_ALT L  &lhm RIGHT_GUI SEMI  &kp SQT
&kp LEFT_SHIFT           &kp Z            &kp X            &kp C              &kp V                &kp B           &kp LEFT_ARROW   &kp N         &kp M                 &kp COMMA           &kp DOT           &kp FSLH             &mo 4
                                          &kp K_MUTE       &lt 3 ENTER        &slt 2 BACKSPACE     &slt 1 SPACE    &kp RIGHT_ARROW  &slt 1 ENTER  &slt 2 BACKSPACE      &lt 3 DELETE
                                                                                                                   &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        navigation {
            display-name = "NUM_NAV";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &kp PAGE_UP   &kp HOME      &kp UP_ARROW  &kp END    &kp PAGE_DOWN          &mmv MOVE_UP     &kp MINUS  &kp N7        &kp N8        &kp N9        &kp KP_MULTIPLY  &kp BSPC
&kp LEFT_SHIFT    &kp LC(LEFT)  &kp LEFT      &kp DOWN      &kp RIGHT  &kp LC(RIGHT_ARROW)    &mmv MOVE_DOWN   &kp EQUAL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE    &trans
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &trans        &trans     &trans                 &mmv MOVE_LEFT   &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_SHIFT  &trans
                                &mkp RCLK     &trans        &trans     &trans                 &mmv MOVE_RIGHT  &kp ENTER  &kp N0        &kp DEL
                                                                                              &mkp LCLK
            >;

            label = "NUMBER";
            sensor-bindings = <&inc_dec_kp LS(RIGHT_ARROW) LS(LEFT_ARROW)>;
        };

        symbol {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans
&kp TILDE  &trans    &trans  &trans    &kp LC(C)  &trans       &mmv MOVE_DOWN   &kp PLUS   &kp ASTERISK  &kp LBKT              &kp RIGHT_BRACKET      &kp PIPE       &trans
&trans     &trans    &trans  &none     &none      &trans       &mmv MOVE_LEFT   &kp MINUS  &kp UNDER     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH  &trans
                     &trans  &trans    &trans     &kp SPACE    &mmv MOVE_RIGHT  &kp RET    &kp EQUAL     &kp BACKSPACE
                                                               &mkp LCLK
            >;

            label = "SYMBOL";
            sensor-bindings = <&inc_dec_kp LS(END) LS(HOME)>;
        };

        func {
            display-name = "FN";
            bindings = <
&kp LEFT_ALT      &kp F1            &kp F2            &kp F3            &kp F4            &kp F5              &mmv MOVE_UP     &kp F6            &kp F7             &kp F8            &kp F9            &kp F10           &kp F11
&kp LEFT_SHIFT    &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5        &mmv MOVE_DOWN   &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8      &kp NUMBER_9      &kp NUMBER_0      &kp F12
&kp LEFT_CONTROL  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &mmv MOVE_LEFT   &kp LS(NUMBER_6)  &kp LS(NUMBER_7)   &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp DEL
                                    &sys_reset        &trans            &kp LEFT_CONTROL  &kp LEFT_SHIFT      &mmv MOVE_RIGHT  &kp RIGHT_SHIFT   &kp RIGHT_CONTROL  &trans
                                                                                                              &mkp LCLK
            >;

            label = "FN";
            sensor-bindings = <&scroll_encoder>;
        };

        system {
            label = "SYS";
            display-name = "SYS";
            bindings = <
&ext_power EP_TOG  &kp N1           &kp N2           &kp N3           &kp N4           &kp N5             &mmv MOVE_UP     &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&sys_reset         &bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3       &mmv MOVE_DOWN   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&bl BL_TOG         &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD    &mmv MOVE_LEFT   &trans    &trans    &trans  &trans     &trans  &none
                                    &kp C_MUTE       &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans    &trans    &trans
                                                                                                          &mkp LCLK
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };
    };
};
